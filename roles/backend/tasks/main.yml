- name: Set Hostname
  ansible.builtin.shell: set-hostname {{env}}-{{component}}

- name: Disable nodejs default version
  ansible.builtin.shell: dnf module disable nodejs -y

- name: Download node js 18 version
  ansible.builtin.shell: dnf module enable nodejs:18 -y

- name: install node js
  ansible.builtin.dnf:
    name: nodejs
    state: present

- name: Copy backend service file
  ansible.builtin.template:
    src: backend.service
    dest: /etc/systemd/system/backend.service

- name: Add application user
  ansible.builtin.user:
    name: expense

- name: Import common role - App pre-reqisites
  ansible.builtin.import_role:
      name: common
      tasks_from: app_prereq
  vars:
    app_dir: /app
    component: backend
    app_user: expense

#- name: Download nodejs dependencies
#  ansible.builtin.shell: npm install
#  args:
#    chdir: /app

- name: Install New Relic NodeJS Library
  ansible.builtin.shell: npm install newrelic --save
  args:
    chdir: /app

- name: Copy Backend StartUP Script
  ansible.builtin.template:
    src: run.sh
    dest: /app/run.sh

- name: Install MySql server
  ansible.builtin.dnf:
    name: mysql
    state: present

- name: Load Schema
  ansible.builtin.shell: mysql -h {{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.endpoint', region='us-east-1' ) }} -u{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.username', region='us-east-1' ) }} -p{{ lookup('amazon.aws.aws_ssm', '{{env}}.rds.password', region='us-east-1' ) }} < /app/schema/backend.sql

- name: Starting backend service
  ansible.builtin.systemd:
    name: backend
    state: restarted
    enabled: yes
    daemon-reload: yes

- name: Import ELK role - filebeat
  ansible.builin.import_role:
    name: elk
    tasks_from: filebeat

- name: Import Prometheus - Node Exporter
  ansible.builin.import_role:
    name: prometheus
    tasks_from: node-exporter